1027 Colors in Mars (20)

People in Mars represent the colors in their computers in a similar way as the Earth people. That is, a color is represented by a 6-digit number, where the first 2 digits are for Red, the middle 2 digits for Green, and the last 2 digits for Blue. The only difference is that they use radix 13 (0-9 and A-C) instead of 16. Now given a color in three decimal numbers (each between 0 and 168), you are supposed to output their Mars RGB values.

Input
Each input file contains one test case which occupies a line containing the three decimal color values.

Output
For each test case you should output the Mars RGB value in the following format: first output #, then followed by a 6-digit number where all the English characters must be upper-cased. If a single color is only 1-digit long, you must print a 0 to its left.

Sample Input:
15 43 71

Sample Output:
#123456

/* unknown words :
    radix: 基数
*/

/*
想的太复杂了，字符串拼接一直错，要慎用string，有时候如果复杂的解决不了，但计算量又不大，为什么不跳出思维的胡同，直接采用最简单的方法呢
*/

#include<cstdio>
#include<string>
using namespace std;
int main()
{
    int a,b,c;
    char num[15] = {'0','1','2','3','4','5','6','7','8','9','A','B','C'};
    scanf("%d%d%d",&a,&b,&c);
    printf("#%c%c%c%c%c%c\n",num[a/13],num[a%13],num[b/13],num[b%13],num[c/13],num[c%13]);
    return 0;
}

/*
 发现不是两位数也有可能是三位数，那么b可能大于10，我服了
 对b也要做a一样的判断，而不是直接输出
*/
#include<cstdio>
#include<string>
using namespace std;
int main()
{
    int n,a,b;
    string str = "#";
    for(int i = 0;i<3;++i)
    {
        scanf("%d",&n);
        a = n%13;
        b = n/13;
        if(b>9) str += (b+'A'-10);
        else str += (b+'0');
        // str += (b+'0'); WA写法
        if(a>9) str += (a+'A'-10);
        else str += (a+'0');
    }
    printf("%s\n",str.c_str());
    return 0;
}
